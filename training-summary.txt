 5. Main Docker Commands
â–º  docker pull
â–º  docker run
â–º  docker ps
â–º  docker run --options
â–º  docker stop
â–º  docker start
â–º  docker ports, docker port mapping

ðŸš€  6. Debugging a Container
â–º  docker logs
â–º  docker exec -it

ðŸš€  7. Demo Project Overview - Docker in Practice (Nodejs App with MongoDB and MongoExpress UI)

ðŸš€  8. Developing with Containers 
â–º  Pre-Requisites
â–º  what we will do in this video
â–º  1st part: The JavaScript App (HTML, JavaScript Frontend, Node.js Backend)
â–º  2nd part: MongoDB and Mongo Express Set-Up with Docker
â–º  Docker Network concept and demo
â–º  3rd part: Connect Node Server with MongoDB container

ðŸš€  9. Docker Compose - Running multiple services
â–º  What is Docker Compose?
â–º  docker run commands VS docker compose
â–º  How to use it? - Create the Docker Compose File (Demo)
â–º  Docker Networking in Docker Compose

ðŸš€  10. Dockerfile - Building our own Docker Image
â–º  What is a Dockerfile?
â–º  How the Dockerfile commands map to the image environment
â–º  Create the Dockerfile (Demo)
â–º  Build an image out of the Dockerfile
â–º  Start the Application to verify: 1) App starts successfully 2) App environment is configured correctly
â–º  do improvement - copy only relevant files

ðŸš€  11. Private Docker Repository - Pushing our built Docker Image into a private Registry on AWS
â–º  Create a Private Repository on AWS ECR
â–º  Login to AWS (docker login)
â–º  Image Naming concept in Docker registries
â–º  docker tag to include the repository name in the image name
â–º  Push the Docker Image to the Private Repository
â–º  Make some changes to the Application, rebuild and push a new version to your AWS repository

ðŸš€  12. Deploy our containerized application

ðŸš€  13. Docker Volumes - Persist data in Docker
â–º  When do we need Docker Volumes?
â–º  What is Docker Volumes?
â–º  3 Docker Volumes Types
â–º  Docker Volumes in docker-compose file

ðŸš€  14. Volumes Demo - Configure persistence for our demo project
